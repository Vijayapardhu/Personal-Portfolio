# Generated by Django 4.2.7 on 2025-09-03 14:44

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Achievement title', max_length=200)),
                ('description', models.TextField(help_text='Achievement description')),
                ('year', models.IntegerField(help_text='Year achieved')),
                ('icon', models.CharField(default='üèÜ', help_text='Emoji or icon for the achievement', max_length=50)),
                ('order', models.IntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
                'ordering': ['order', '-year'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Sender's name", max_length=100)),
                ('email', models.EmailField(help_text="Sender's email", max_length=254)),
                ('subject', models.CharField(help_text='Message subject', max_length=200)),
                ('message', models.TextField(help_text='Message content')),
                ('read', models.BooleanField(default=False, help_text='Message has been read')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your full name', max_length=100)),
                ('tagline', models.CharField(help_text='Short professional tagline', max_length=200)),
                ('about_text', models.TextField(help_text='Detailed about me text')),
                ('profile_picture', models.ImageField(help_text='Your profile picture', upload_to='profile/')),
                ('email', models.EmailField(help_text='Your email address', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Your phone number (optional)', max_length=20)),
                ('location', models.CharField(blank=True, help_text='Your location (optional)', max_length=100)),
                ('resume', models.FileField(blank=True, help_text='Your resume PDF (optional)', upload_to='resume/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profile',
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Portfolio', help_text='Site name', max_length=100)),
                ('hero_title', models.CharField(default='Welcome to My Portfolio', help_text='Hero section title', max_length=200)),
                ('hero_subtitle', models.TextField(default="I'm a passionate developer creating amazing digital experiences", help_text='Hero section subtitle')),
                ('primary_color', models.CharField(default='#3B82F6', help_text='Primary theme color (hex)', max_length=7)),
                ('secondary_color', models.CharField(default='#1F2937', help_text='Secondary theme color (hex)', max_length=7)),
                ('accent_color', models.CharField(default='#10B981', help_text='Accent color (hex)', max_length=7)),
                ('enable_dark_mode', models.BooleanField(default=True, help_text='Enable dark/light mode toggle')),
                ('enable_animations', models.BooleanField(default=True, help_text='Enable AOS animations')),
                ('contact_email', models.EmailField(help_text='Email for contact form submissions', max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Skill name', max_length=100)),
                ('category', models.CharField(choices=[('programming', 'Programming Languages'), ('framework', 'Frameworks & Libraries'), ('database', 'Databases'), ('tool', 'Tools & Platforms'), ('other', 'Other')], default='other', max_length=20)),
                ('icon_url', models.URLField(help_text='Icon URL from skillicons.dev or FontAwesome', validators=[django.core.validators.URLValidator()])),
                ('proficiency', models.IntegerField(choices=[(0, '0%'), (10, '10%'), (20, '20%'), (30, '30%'), (40, '40%'), (50, '50%'), (60, '60%'), (70, '70%'), (80, '80%'), (90, '90%'), (100, '100%')], default=80, help_text='Skill proficiency level')),
                ('order', models.IntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('github', 'GitHub'), ('linkedin', 'LinkedIn'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('facebook', 'Facebook'), ('youtube', 'YouTube'), ('portfolio', 'Portfolio'), ('blog', 'Blog'), ('other', 'Other')], help_text='Social media platform', max_length=20)),
                ('url', models.URLField(help_text='Profile URL', validators=[django.core.validators.URLValidator()])),
                ('icon_class', models.CharField(default='fab fa-github', help_text='FontAwesome icon class', max_length=50)),
                ('order', models.IntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('active', models.BooleanField(default=True, help_text='Show this link on the site')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Social Link',
                'verbose_name_plural': 'Social Links',
                'ordering': ['order', 'platform'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Project title', max_length=200)),
                ('description', models.TextField(help_text='Project description')),
                ('short_description', models.CharField(help_text='Short description for cards', max_length=300)),
                ('image', models.ImageField(help_text='Project screenshot or image', upload_to='projects/')),
                ('github_link', models.URLField(blank=True, help_text='GitHub repository link', validators=[django.core.validators.URLValidator()])),
                ('live_link', models.URLField(blank=True, help_text='Live demo link', validators=[django.core.validators.URLValidator()])),
                ('featured', models.BooleanField(default=False, help_text='Mark as featured project')),
                ('order', models.IntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tech_stack', models.ManyToManyField(help_text='Technologies used', related_name='projects', to='main.skill')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['order', '-created_at'],
            },
        ),
    ]
