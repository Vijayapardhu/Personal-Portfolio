# Generated by Django 4.2.7 on 2025-09-01 02:42

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('award', 'Award'), ('certification', 'Certification'), ('project', 'Project Milestone'), ('skill', 'Skill Mastery'), ('other', 'Other')], default='other', max_length=20)),
                ('icon', models.CharField(default='üèÜ', help_text='Emoji or icon name', max_length=50)),
                ('date_achieved', models.DateField(default=django.utils.timezone.now)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-date_achieved', '-featured'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('issuing_organization', models.CharField(max_length=200)),
                ('credential_id', models.CharField(blank=True, max_length=100, null=True)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('credential_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Certification',
                'verbose_name_plural': 'Certifications',
                'ordering': ['-issue_date', '-featured'],
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('github_url', models.URLField()),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Contact Information',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=200)),
                ('institution', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('current', models.BooleanField(default=False)),
                ('score', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Education',
                'ordering': ['-end_year', '-start_year'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('company', models.CharField(max_length=200)),
                ('experience_type', models.CharField(choices=[('internship', 'Internship'), ('freelance', 'Freelance'), ('part-time', 'Part-time'), ('volunteer', 'Volunteer'), ('other', 'Other')], default='internship', max_length=20)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('current', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('technologies_used', models.JSONField(blank=True, default=list)),
                ('achievements', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Experience',
                'verbose_name_plural': 'Experience',
                'ordering': ['-start_date', '-end_date'],
            },
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(default='üé®', max_length=50)),
                ('color', models.CharField(default='blue', help_text='CSS color class', max_length=20)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Hobbies',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProfileStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_views', models.IntegerField(default=0)),
                ('github_followers', models.IntegerField(default=0)),
                ('github_stars', models.IntegerField(default=0)),
                ('projects_count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Profile Statistics',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('short_description', models.CharField(help_text='Brief description for cards', max_length=300)),
                ('technologies', models.JSONField(default=list, help_text='List of technologies used')),
                ('project_type', models.CharField(choices=[('android', 'Android App'), ('web', 'Web Application'), ('desktop', 'Desktop Application'), ('api', 'API/Backend'), ('ai', 'AI/Automation'), ('other', 'Other')], default='other', max_length=20)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=20)),
                ('github_url', models.URLField(blank=True)),
                ('live_url', models.URLField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='projects/')),
                ('icon', models.CharField(default='fas fa-code', help_text='Font Awesome icon class', max_length=50)),
                ('featured', models.BooleanField(default=False)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('challenges_faced', models.TextField(blank=True, help_text='Technical challenges and how you solved them')),
                ('lessons_learned', models.TextField(blank=True, help_text='Key takeaways from the project')),
                ('impact', models.TextField(blank=True, help_text='Real-world impact or benefits')),
                ('downloads_installs', models.IntegerField(default=0, help_text='Number of downloads/installs if applicable')),
                ('stars', models.IntegerField(default=0, help_text='GitHub stars if applicable')),
                ('forks', models.IntegerField(default=0, help_text='GitHub forks if applicable')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-featured', '-completed_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('programming', 'Programming Languages'), ('frameworks', 'Frameworks & Libraries'), ('tools', 'Tools & IDEs'), ('databases', 'Databases'), ('cloud', 'Cloud Services'), ('design', 'Design Tools')], default='programming', max_length=20)),
                ('icon', models.CharField(help_text='Icon name or emoji', max_length=50)),
                ('proficiency', models.IntegerField(default=80, help_text='Skill proficiency percentage (0-100)')),
                ('featured', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['category', 'order', 'name'],
            },
        ),
    ]
